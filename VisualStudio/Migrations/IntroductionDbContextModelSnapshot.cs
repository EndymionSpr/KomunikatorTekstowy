// <auto-generated />
using KomunikatorTekstowy.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KomunikatorTekstowy.Migrations
{
    [DbContext(typeof(IntroductionDbContext))]
    partial class IntroductionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KomunikatorTekstowy.Models.Chats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnName("path")
                        .HasColumnType("text");

                    b.Property<int>("User_id")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("KomunikatorTekstowy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnName("nickname")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nickname = "User1",
                            Password = "qweqwe"
                        },
                        new
                        {
                            Id = 2,
                            Nickname = "User2",
                            Password = "qweqwe"
                        },
                        new
                        {
                            Id = 3,
                            Nickname = "User3",
                            Password = "qweqwe"
                        },
                        new
                        {
                            Id = 4,
                            Nickname = "User4",
                            Password = "qweqwe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
